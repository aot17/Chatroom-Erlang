-module(http_handler).
-export([init/2, handle/2, terminate/3]).

init(Req, Opts) ->
    {ok, Req, Opts}.

handle(Req, State) ->
    Method = cowboy_req:method(Req),
    case Method of
        <<"POST">> ->
            {ok, Body, Req1} = cowboy_req:read_body(Req),
            ParsedBody = jsx:decode(Body, [return_maps]),
            UserId = maps:get("userId", ParsedBody),
            SessionData = maps:get("sessionData", ParsedBody),
            session_handler:create_session(UserId, SessionData),
            RespBody = jsx:encode(#{result => "Session created"}),
            {ok, Req2} = cowboy_req:reply(200, 
                                       #{<<"content-type">> => <<"application/json">>}, 
                                       RespBody, Req1),
            {ok, Req2, State};
        <<"GET">> ->
            {UserId, Req1} = cowboy_req:match_qs([{"user_id", [], undefined}], Req),
            SessionData = session_handler:get_session(UserId),
            RespBody = jsx:encode(#{user_id => UserId, session_data => SessionData}),
            {ok, Req2} = cowboy_req:reply(200, 
                                       #{<<"content-type">> => <<"application/json">>}, 
                                       RespBody, Req1),
            {ok, Req2, State}
        %% You can add handling for other HTTP methods here
    end.

terminate(_Reason, _Req, _State) ->
    ok.

